tcgaexp_fp = tcgaexp_fp[tcgarna$alliquot,] #_fp means for prediction
View(tcgaexp_fp)
dtexp = tcgaexp_fp[1:5,]
View(dtexp)
dtexp = tcgaexp_fp[1:10,]
rm(tcgaau, tcgaexp, tcgaexp_fp, tcgarna)
rm(q50, q95)
load("model/tcga_aneuploidy_glmnetmodels.RData")
glmnetmodels$glmnet_chr1p$lambda
glmnetmodels$glmnet_chr1p$name
glmnetmodels$glmnet_chr1p$glmnet.fit
glmnetmodels$glmnet_chr1p$glmnet.fit$dim
glmnetmodels$glmnet_chr1p$glmnet.fit$df
glmnetmodels$glmnet_chr1p$glmnet.fit$beta
x <- coef(glmnetmodels$glmnet_chr1p, s = "lambda.min")
df0 <- data.frame(name = x$`0`@Dimnames[[1]][xx$`0`@i + 1], coefficient = xx$`0`@x, stringsAsFactors = F)
df0 <- data.frame(name = x$`0`@Dimnames[[1]][x$`0`@i + 1], coefficient = x$`0`@x, stringsAsFactors = F)
View(df0)
View(df0)
#df0 <- data.frame(name = x$`0`@Dimnames[[1]][x$`0`@i + 1], coefficient = x$`0`@x, stringsAsFactors = F)
#glmnetmodels$glmnet_chr1p
x$`0`@factors
x$`0`@i
x$`0`@Dimnames
x$`0`@Dimnames[[1]]
x$`0`@Dimnames[[1]] ->gn
x$`0`@Dimnames[[1]][-1] ->gn
gn
xx <- coef(glmnetmodels$glmnet_chr1p, s = "lambda.min")
gns = xx$`0`@Dimnames[[1]][-1] ->gn
rm(x, gns)
View(dtexp)
names(dtexp) -> gns
View(df0)
View(dtexp)
predict(glmnetmodels$glmnet_chr1p, newx = dtexp)
predict(glmnetmodels$glmnet_chr1p, newx = as.matrix(dtexp))
exp(2)
predict(glmnetmodels$glmnet_chr1p, newx = as.matrix(dtexp)) ->m
exp(m[,1])
exp(m[,1,1])
m = m[,,1]
View(m)
exp(m[1,])
exp(m[1,])/sum(exp(m[1,]))
m = predict(glmnetmodels$glmnet_chr1p, newx = as.matrix(dtexp))[,,1]
View(m)
View(m)
exp(m)
scale(t(exp(m)),scale = F)
m = predict(glmnetmodels$glmnet_chr1p, newx = as.matrix(dtexp))[,,1]
m = exp(m)/colSums(exp(m))
m
m = predict(glmnetmodels$glmnet_chr1p, newx = as.matrix(dtexp))[,,1]
m = exp(m)/rowSums(exp(m))
m
pheatmap::pheatmap(m)
tcgaau = read.delim("~/Documents/codel/TCGA_aneuploidy.txt", stringsAsFactors = F)
tcgaau$Sample = gsub(pattern = "-", replacement = ".", tcgaau$Sample)
View(tcgaau)
View(df0)
View(dtexp)
dimnames(m)
dimnames(m)[[2]]
lb = dimnames(m)[[2]][which.max(m[1,])]
lb = dimnames(m)[[2]][unlist(apply(m, 1, which.max))]
lb
View(m)
mout = data.frame(Sample = unlist(lapply(dimnames(m)[[1]], function(x) substr(x,1,12))), cna = lb, stringsAsFactors = F)
View(mout)
for (i in 1:length(glmnetmodels)){
md = glmnetmodels[[i]]
m = predict(md, newx = as.matrix(dtexp))[,,1]
m = exp(m)/rowSums(exp(m))
lb = dimnames(m)[[2]][unlist(apply(m, 1, which.max))]
if (i ==1){
mout = data.frame(Sample = unlist(lapply(dimnames(m)[[1]], function(x) substr(x,1,12))), cna = lb, stringsAsFactors = F)
names(mout)[2] = gsub(pattern = "glmnet_","",names(glmnetmodels)[i])
} else{
tmp = data.frame(Sample = unlist(lapply(dimnames(m)[[1]], function(x) substr(x,1,12))), cna = lb, stringsAsFactors = F)
names(tmp)[2] = gsub(pattern = "glmnet_","",names(glmnetmodels)[i])
mout = merge(mout, tmp)
}
}
View(mout)
rl = tcgaau[tcgaau$Sample %in% mout$Sample,]
View(rl)
View(tcgaau)
for (i in 1:length(glmnetmodels)){
md = glmnetmodels[[i]]
m = predict(md, newx = as.matrix(dtexp))[,,1]
m = exp(m)/rowSums(exp(m))
lb = dimnames(m)[[2]][unlist(apply(m, 1, which.max))]
if (i ==1){
mout = data.frame(Sample = unlist(lapply(dimnames(m)[[1]], function(x) substr(x,1,15))), cna = lb, stringsAsFactors = F)
names(mout)[2] = gsub(pattern = "glmnet_","",names(glmnetmodels)[i])
} else{
tmp = data.frame(Sample = unlist(lapply(dimnames(m)[[1]], function(x) substr(x,1,15))), cna = lb, stringsAsFactors = F)
names(tmp)[2] = gsub(pattern = "glmnet_","",names(glmnetmodels)[i])
mout = merge(mout, tmp)
}
}
rl = tcgaau[tcgaau$Sample %in% mout$Sample,]
View(rl)
rl$chr1p
mout$chr1p
mout = mout[order(mout$Sample),]
View(mout)
View(rl)
rl = rl[order(rl$Sample),]
mout$chr1p
rl$chr1p
mout$chr1q
rl$chr1q
mout$chr1
rl$chr1
rl$chr10
mout$chr10
View(m)
View(mout)
pheatmap::pheatmap(mout[,2:40])
rownames(mout) = mout$Sample
mout = mout[,-1]
View(mout)
mout = as.integer(mout)
mout$chr1p[1]
for (i in 1:length(glmnetmodels)){
md = glmnetmodels[[i]]
m = predict(md, newx = as.matrix(dtexp))[,,1]
m = exp(m)/rowSums(exp(m))
lb = as.integer(dimnames(m)[[2]][unlist(apply(m, 1, which.max))])
if (i ==1){
mout = data.frame(Sample = unlist(lapply(dimnames(m)[[1]], function(x) substr(x,1,15))), cna = lb, stringsAsFactors = F)
names(mout)[2] = gsub(pattern = "glmnet_","",names(glmnetmodels)[i])
} else{
tmp = data.frame(Sample = unlist(lapply(dimnames(m)[[1]], function(x) substr(x,1,15))), cna = lb, stringsAsFactors = F)
names(tmp)[2] = gsub(pattern = "glmnet_","",names(glmnetmodels)[i])
mout = merge(mout, tmp)
}
}
View(mout)
rownames(mout) = mout$Sample
mout = mout[,-1]
View(mout)
pheatmap::pheatmap(mout[,2:40])
pheatmap::pheatmap(mout[,2:40], cluster_cols = F)
pheatmap::pheatmap(mout[,1:39], cluster_cols = F)
pheatmap::pheatmap(mout[,1:39], cluster_cols = F, border_color = "white")
pheatmap::pheatmap(mout[,1:39], cluster_cols = F, border_color = "grey80")
pheatmap::pheatmap(mout[,1:39], cluster_cols = F, border_color = "grey90")
View(dtexp)
#library(superheat)
hg19cyto = read.delim("~/Documents/codel/CNAPE/scripts/hg19.cytoBand.txt", stringsAsFactors = F)
View(hg19cyto)
View(hg19cyto)
chrl = read.delim("~/Documents/pangliomaevolution/SV/hg19.chrom.sizes.txt", stringsAsFactors = F)
View(chrl)
chrl = read.delim("~/Documents/pangliomaevolution/SV/hg19.chrom.sizes.txt", stringsAsFactors = F, header =F)
View(chrl)
View(mout)
for (i in 1:length(glmnetmodels)){
md = glmnetmodels[[i]]
m = predict(md, newx = as.matrix(dtexp))[,,1]
m = exp(m)/rowSums(exp(m))
lb = as.integer(dimnames(m)[[2]][unlist(apply(m, 1, which.max))])
if (i ==1){
mout = data.frame(Sample = unlist(lapply(dimnames(m)[[1]], function(x) substr(x,1,15))), cna = lb, stringsAsFactors = F)
names(mout)[2] = gsub(pattern = "glmnet_","",names(glmnetmodels)[i])
} else{
tmp = data.frame(Sample = unlist(lapply(dimnames(m)[[1]], function(x) substr(x,1,15))), cna = lb, stringsAsFactors = F)
names(tmp)[2] = gsub(pattern = "glmnet_","",names(glmnetmodels)[i])
mout = merge(mout, tmp)
}
}
rownames(mout) = mout$Sample
View(mout)
View(mout)
names(mout)
write.table(mout[1:40], file = "example/example.arm_level.cna.txt", quote =F, sep = "\t" )
moutc = mout[,c(1,41:52,26:28,53:57,39:40)]
View(moutc)
names(moutc)[2:23] = gsub(pattern = "q",replacement = "",x =names(moutc)[2:23] )
mout
moutc
write.table(mout[1:40], file = "example/example.chromosome_level.cna.txt", quote =F, row.names = F, sep = "\t" )
View(chrl)
View(hg19cyto)
View(dtexp)
hg19 = read.delim("~/Documents/pancanfusions/hg19.v19.mymap.txt", stringsAsFactors = F)
View(hg19)
View(chrl)
View(moutc)
chrl$V2[names(moutc)[-1]]
chrl$V2[chrl$V1 ==names(moutc)[-1]]
chrl$V2[chrl$V1 %in% names(moutc)[-1]]
chrl$V1 %in% names(moutc)[-1]
chrl$V1[chrl$V1 %in% names(moutc)[-1]]
View(chrl)
chrl = chrl[chrl$V1 %in% names(moutc),]
chrl = chrl[chrl$V1 %in% c("chr1","chr2","chr3","chr4","chr5","chr6","chr7","chr8","chr9","chr10","chr11","chr12","chr13","chr14","chr15","chr16","chr17","chr18","chr19","chr20","chr21","chr22"),]
View(chrl)
View(chrl)
chrl = chrl[chrl$V1 %in% paste0("chr",1:22) ,]
View(chrl)
View(chrl)
View(moutc)
plot(0:sum(chrl$V2)/1000000, -1:1)
chrl$V2
sum(chrl$V2)
sum(as.numeric(chrl$V2))
sum(as.numeric(chrl$V2))/1000000
plot(0:sum(as.numeric(chrl$V2))/1000000, -1:1)
plot(sum(as.numeric(chrl$V2))/1000000, 1)
plot(sum(as.numeric(chrl$V2))/1000000, 1, ylim = c(-1.5, 1.5), xlim = c(0,3000))
plot(sum(as.numeric(chrl$V2))/1000000, 1, ylim = c(-1.5, 1.5), xlim = c(0,3000), type = "n")
plot(sum(as.numeric(chrl$V2))/1000000, 1, ylim = c(-1.5, 1.5), xlim = c(0,3000), type = "n")
segments(0, moutc$chr1[1], chrl$V2[chrl$V1 == "chr1"]/1000000,moutc$chr1[1] )
plot(sum(as.numeric(chrl$V2))/1000000, 1, ylim = c(-1.2, 1.2), xlim = c(0,3000), type = "n")
segments(0, moutc$chr1[1], chrl$V2[chrl$V1 == "chr1"]/1000000,moutc$chr1[1] )
View(moutc)
View(chrl)
plot(sum(as.numeric(chrl$V2))/1000000, 1, ylim = c(-1.2, 1.2), xlim = c(0,3000), type = "n")
cols = c("blue","black","red")
gl = 0
for (j in 2:ncol(moutc)){
segments(gl, moutc[1,j], gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,moutc[1,j], col = cols[moutc[1,j] + 2] )
}
plot(sum(as.numeric(chrl$V2))/1000000, 1, ylim = c(-1.2, 1.2), xlim = c(0,3000), type = "n")
cols = c("blue","black","red")
gl = 0
for (j in 2:ncol(moutc)){
segments(gl, moutc[1,j], gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,moutc[1,j], col = cols[moutc[1,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
plot(sum(as.numeric(chrl$V2))/1000000, 1, ylim = c(-1.2, 1.2), xlim = c(0,3000), type = "n")
cols = c("blue","black","red")
gl = 0
for (j in 2:ncol(moutc)){
segments(gl, moutc[4,j], gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,moutc[4,j], col = cols[moutc[4,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
?rect
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), xlim = c(0,3000), type = "n")
cols = c("blue","black","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), xlim = c(0,3000), type = "n", ylim = c(0,nrow(moutc)))
cols = c("blue","black","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), xlim = c(0,3000), type = "n", ylim = c(0,nrow(moutc)), frame.plot = F)
cols = c("blue","black","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), xlim = c(0,3000), type = "n", ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F)
cols = c("blue","black","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), xlim = c(0,3000), type = "n", ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F)
cols = c("blue","yellow","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), xlim = c(0,3000), type = "n", ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F)
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
View(mout)
View(moutc)
text(-1, 0.5,labels = moutc$Sample[1])
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample)
par(las = 2)
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample)
par(las = 2, mar = c(3,5,2,2))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), xlim = c(0,3000), type = "n", ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F)
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample)
par(las = 2, mar = c(3,5,2,2))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), xlim = c(0,3000), type = "n", ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F)
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex = 0.7)
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xaxt = "n", yaxt = "n")
par(las = 2, mar = c(3,5,2,2))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "n")
cols = c("blue","#CCCCCC","red")
par(las = 2, mar = c(3,5,2,2))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex = 0.7)
View(chrl)
chrl$v3 = cumsum(chrl$V2)
chrl$v3 = cumsum(as.numeric(chrl$V2))
View(chrl)
axis(1, at =chrl$v3, labels = paste0("chr",1:22), cex = 0.7)
axis(1, at =chrl$v3/1000000, labels = paste0("chr",1:22), cex = 0.7)
par(las = 2, mar = c(3,5,2,2))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex = 0.7)
par(las = 1)
axis(1, at =chrl$v3/1000000, labels = paste0("chr",1:22), cex = 0.7)
par(las = 2, mar = c(3,5,2,2))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex = 0.7,line = NA,tick = NA)
par(las = 1)
axis(1, at =chrl$v3/1000000, labels = paste0("chr",1:22), cex = 0.7,line = NA,tick = NA)
par(las = 2, mar = c(3,5,2,2))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex = 0.7,tick = F, line = NA)
par(las = 1)
axis(1, at =chrl$v3/1000000, labels = paste0("chr",1:22), cex = 0.7,line = NA,tick = F)
?mgp
?par
par(las = 2, mar = c(3,5,2,2), mgp = c(3,0,0))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex = 0.7,tick = F, line = NA)
par(las = 1)
axis(1, at =chrl$v3/1000000, labels = paste0("chr",1:22), cex = 0.7,line = NA,tick = F)
par(las = 2, mar = c(3,5,2,2), mgp = c(3,0,0))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex.axis = 0.7,tick = F, line = NA)
par(las = 1)
axis(1, at =chrl$v3/1000000, labels = paste0("chr",1:22), cex = 0.7,line = NA,tick = F)
axis(1, at =chrl$v3/1000000, labels = paste0("chr",1:22), cex.lab = 0.7,line = NA,tick = F)
par(las = 2, mar = c(3,5,2,2), mgp = c(3,0,0))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$V2[chrl$V1 == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex.axis = 0.7,tick = F, line = NA)
par(las = 1)
axis(1, at =chrl$v3/1000000, labels = paste0("chr",1:22), cex.axis = 0.7,line = NA,tick = F)
View(chrl)
write.table("~/Documents/codel/CNAPE/example/chr19.chrlen.txt", row.names = F, col.names = F, sep = "\t", quote = F)
write.table(chrl ,file = "~/Documents/codel/CNAPE/example/chr19.chrlen.txt", row.names = F, col.names = F, sep = "\t", quote = F)
chrl = read.delim("~/Documents/codel/CNAPE/example/chr19.chrlen.txt", stringsAsFactors = F)
par(las = 2, mar = c(3,5,2,2), mgp = c(3,0,0))
plot(sum(as.numeric(chrl$V2))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
par(las = 2, mar = c(3,5,2,2), mgp = c(3,0,0))
plot(sum(as.numeric(chrl$len))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$len[chrl$chr == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$len[chrl$chr == names(moutc)[j]]/1000000
}
}
View(chrl)
chrl = read.delim("~/Documents/codel/CNAPE/example/chr19.chrlen.txt", stringsAsFactors = F)
par(las = 2, mar = c(3,5,2,2), mgp = c(3,0,0))
plot(sum(as.numeric(chrl$len))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$len[chrl$chr == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$len[chrl$chr == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex.axis = 0.7,tick = F, line = NA)
par(las = 1)
axis(1, at =chrl$mid/1000000, labels = paste0("chr",1:22), cex.axis = 0.7,line = NA,tick = F)
par(las = 2, mar = c(3,5,2,2), mgp = c(3,0,0))
plot(sum(as.numeric(chrl$len))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","#CCCCCC","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$len[chrl$chr == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$len[chrl$chr == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex.axis = 0.7,tick = F, line = NA)
#par(las = 1)
axis(1, at =chrl$mid/1000000, labels = paste0("chr",1:22), cex.axis = 0.7,line = NA,tick = F)
par(las = 2, mar = c(3,5,2,2), mgp = c(3,0,0))
plot(sum(as.numeric(chrl$len))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","white","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$len[chrl$chr == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2] )
gl = gl + chrl$len[chrl$chr == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex.axis = 0.7,tick = F, line = NA)
#par(las = 1)
axis(1, at =chrl$mid/1000000, labels = paste0("chr",1:22), cex.axis = 0.7,line = NA,tick = F)
par(las = 2, mar = c(3,5,2,2), mgp = c(3,0,0))
plot(sum(as.numeric(chrl$len))/1000000, nrow(moutc), type = "n",
xlim = c(0,3000),ylim = c(0,nrow(moutc)), frame.plot = F ,axes = F, xlab = "", ylab = "")
cols = c("blue","grey90","red")
for (i in 1:nrow(moutc)){
gl = 0
for (j in 2:ncol(moutc)){
rect(gl, i-1, gl + chrl$len[chrl$chr == names(moutc)[j]]/1000000,i , col = cols[moutc[i,j] + 2],border = NA )
gl = gl + chrl$len[chrl$chr == names(moutc)[j]]/1000000
}
}
axis(2, at = (1:nrow(moutc))-0.5, labels = moutc$Sample, cex.axis = 0.7,tick = F, line = NA)
axis(1, at =chrl$mid/1000000, labels = paste0("chr",1:22), cex.axis = 0.7,line = NA,tick = F)
View(dtexp)
write.table(dtexp, file = "example/example.geneExpression.normalized.txt", quote =F, sep = "\t", )
